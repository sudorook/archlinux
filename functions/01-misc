#! /bin/bash

# Arch Linux (post-)install scripts
# Copyright (C) 2020
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.


dir="$(dirname "$0")"

mksdbootconf="${dir}/utils/sdboot-mkconfig"

zsh="${dir}/packages/zsh.list"
zshrc="${dir}/dotfiles/zshrc"
p10krc="${dir}/dotfiles/p10k"
function install_zsh {
  show_header "Installing zsh."
  check_installed "${zsh}"
  check_fail
  show_success "zsh installed."

  mkdir -p "${HOME}/.local/share/zsh/site-functions"

  show_info "Copying zshrc."
  cp -f "${zshrc}" "${HOME}/.zshrc"

  show_info "Copying powerlevel10k config."
  cp -f "${p10krc}" "${HOME}/.p10k.zsh"

  if ! test "$(getent passwd "$(whoami)" | grep "zsh")"; then
    show_info "Changing login shell to zsh. Provide your password."
    chsh -s /bin/zsh
  fi
}

hardened="${dir}/packages/hardened.list"
hardenedsdadd="${dir}/hooks/999-add-linux-hardened.hook"
hardenedsdremove="${dir}/hooks/999-remove-linux-hardened.hook"
hardenedsdupdate="${dir}/hooks/999-add-linux-hardened.hook"
pacmanhookdir="/etc/pacman.d/hooks"
function install_linux_hardened {
  show_header "Installing linux-hardened kernel."
  check_installed "${hardened}"
  check_fail
  show_success "Hardened kernel installed."

  if command -v grub-mkconfig >/dev/null 2>&1; then
    show_info "Regenerating grub.cfg"
    sudo grub-mkconfig -o /boot/grub/grub.cfg
  fi

  if [[ "$(sudo bootctl is-installed)" = yes ]]; then
    sudo cp -af "${hardenedsdadd}" "${pacmanhookdir}"
    sudo cp -af "${hardenedsdremove}" "${pacmanhookdir}"
    sudo cp -af "${hardenedsdupdate}" "${pacmanhookdir}"
    sudo "${mksdbootconf}" linux-hardened
  fi
}

lts="${dir}/packages/lts.list"
ltssdadd="${dir}/hooks/999-add-linux-lts.hook"
ltssdremove="${dir}/hooks/999-remove-linux-lts.hook"
ltssdupdate="${dir}/hooks/999-add-linux-lts.hook"
pacmanhookdir="/etc/pacman.d/hooks"
function install_linux_lts {
  show_header "Installing linux-lts kernel."
  check_installed "${lts}"
  check_fail
  show_success "LTS kernel installed."

  if command -v grub-mkconfig >/dev/null 2>&1; then
    show_info "Regenerating grub.cfg"
    sudo grub-mkconfig -o /boot/grub/grub.cfg
  fi

  if [[ "$(sudo bootctl is-installed)" = yes ]]; then
    sudo cp -af "${ltssdadd}" "${pacmanhookdir}"
    sudo cp -af "${ltssdremove}" "${pacmanhookdir}"
    sudo cp -af "${ltssdupdate}" "${pacmanhookdir}"
    sudo "${mksdbootconf}" linux-lts
  fi
}

zen="${dir}/packages/zen.list"
zensdadd="${dir}/hooks/999-add-linux-zen.hook"
zensdremove="${dir}/hooks/999-remove-linux-zen.hook"
zensdupdate="${dir}/hooks/999-add-linux-zen.hook"
pacmanhookdir="/etc/pacman.d/hooks"
function install_linux_zen {
  show_header "Installing linux-zen kernel."
  check_installed "${zen}"
  check_fail
  show_success "Zen kernel installed."

  if command -v grub-mkconfig >/dev/null 2>&1; then
    show_info "Regenerating grub.cfg"
    sudo grub-mkconfig -o /boot/grub/grub.cfg
  fi

  if [[ "$(sudo bootctl is-installed)" = yes ]]; then
    sudo cp -af "${zensdadd}" "${pacmanhookdir}"
    sudo cp -af "${zensdremove}" "${pacmanhookdir}"
    sudo cp -af "${zensdupdate}" "${pacmanhookdir}"
    sudo "${mksdbootconf}" linux-zen
  fi
}

utils="${dir}/packages/utils.list"
tmuxconfig="${dir}/dotfiles/tmux.conf"
rkhunterconfig="/etc/rkhunter.conf"
function install_utils {
  show_header "Installing general utilities."
  check_installed "${utils}"
  check_fail
  show_success "Utilities installed."

  show_info "Installing tmux config."
  cp -f "${tmuxconfig}" "${HOME}/.tmux.conf"

  show_info "Whitelisting files in /etc/rkhunter.conf"
  sudo sed -i \
    -e "/^#SCRIPTWHITELIST=\/usr\/bin\/groups$/a SCRIPTWHITELIST=\/usr\/bin\/egrep" \
    -e "/^#SCRIPTWHITELIST=\/usr\/bin\/groups$/a SCRIPTWHITELIST=\/usr\/bin\/fgrep" \
    -e "/^#SCRIPTWHITELIST=\/usr\/bin\/groups$/a SCRIPTWHITELIST=\/usr\/bin\/ldd" \
    -e "/^#SCRIPTWHITELIST=\/usr\/bin\/groups$/a SCRIPTWHITELIST=\/usr\/bin\/vendor_perl\/GET" \
    "${rkhunterconfig}"
}

laptop="${dir}/packages/laptop.list"
function install_laptop {
  show_header "Installing laptop utilities."
  check_installed "${laptop}"
  check_fail
  show_success "Laptop utilities installed."

  # Enable tlp on laptops.
  show_info "Enabling and starting tlp systemd units."
  sudo systemctl enable tlp.service
  sudo systemctl start tlp.service
  show_success "tlp enabled."
}

function 01-misc {
  show_question "Misc: what do you want to install?"
  show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"

  local options=(
    "Back"
    "All"
    "Linux hardened kernel"
    "Linux LTS kernel"
    "Linux zen kernel"
    "Linux utilities"
    "Laptop tools"
    "zsh")
  select option in "${options[@]}"; do
    case $option in
      "Back")
        break
        ;;
      "All")
        install_linux_hardened
        install_linux_lts
        install_linux_zen
        install_utils
        install_laptop
        install_zsh
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      "Linux hardened kernel")
        install_linux_hardened
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      "Linux LTS kernel")
        install_linux_lts
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      "Linux zen kernel")
        install_linux_zen
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      "Linux utilities")
        install_utils
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      "Laptop tools")
        install_laptop
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      "zsh")
        install_zsh
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      *)
        show_warning "Invalid option."
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
    esac
  done
}
